Terminals unused in grammar

   END


Grammar

    0 $accept: Program $end

    1 Program: Functions

    2 Functions: Function Functions
    3          | %empty

    4 Function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    5 Declaration: Identifiers COLON INTEGER
    6            | Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    7 Declarations: Declaration SEMICOLON Declarations
    8             | %empty

    9 Identifiers: IDENTIFIER
   10            | IDENTIFIER COMMA Identifiers

   11 Statements: Statement SEMICOLON Statements
   12           | Statement SEMICOLON

   13 Statement: vars
   14          | ifs
   15          | whiles
   16          | reads
   17          | writes
   18          | dos
   19          | continues
   20          | returns

   21 vars: Var ASSIGN expression

   22 ifs: IF Bool_Expression THEN Statements ENDIF
   23    | IF Bool_Expression THEN Statements ELSE Statements ENDIF

   24 whiles: WHILE Bool_Expression BEGINLOOP Statements ENDLOOP

   25 dos: DO BEGINLOOP Statements ENDLOOP WHILE Bool_Expression

   26 reads: READ Var VLoop

   27 writes: WRITE Var VLoop

   28 VLoop: COMMA Var VLoop
   29      | %empty

   30 continues: CONTINUE

   31 returns: RETURN expression

   32 Bool_Expression: Relation_and_Expression
   33                | Bool_Expression OR Relation_and_Expression

   34 Relation_and_Expression: Relation_Expression
   35                        | Relation_and_Expression AND Relation_Expression

   36 Relation_Expression: rexp
   37                    | NOT rexp

   38 rexp: expression comp expression
   39     | TRUE
   40     | FALSE
   41     | L_PAREN Bool_Expression R_PAREN

   42 comp: EQ
   43     | NEQ
   44     | LT
   45     | GT
   46     | LTE
   47     | GTE

   48 expression: Mult_Expression
   49           | Mult_Expression ADD expression
   50           | Mult_Expression SUB expression

   51 Mult_Expression: Term
   52                | Term MULT Mult_Expression
   53                | Term DIV Mult_Expression
   54                | Term MOD Mult_Expression

   55 Term: Positive_Term
   56     | SUB Positive_Term
   57     | IDENTIFIER Term_Identifier

   58 Positive_Term: Var
   59              | NUMBER
   60              | L_PAREN expression R_PAREN

   61 Term_Identifier: L_PAREN Term_Expression R_PAREN
   62                | L_PAREN R_PAREN

   63 Term_Expression: expression
   64                | expression COMMA Term_Expression

   65 Var: IDENTIFIER
   66    | IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 4 9 10 57 65 66
NUMBER (259) 6 59
FUNCTION (260) 4
BEGIN_PARAMS (261) 4
END_PARAMS (262) 4
BEGIN_LOCALS (263) 4
END_LOCALS (264) 4
BEGIN_BODY (265) 4
END_BODY (266) 4
INTEGER (267) 5 6
ARRAY (268) 6
OF (269) 6
IF (270) 22 23
THEN (271) 22 23
ENDIF (272) 22 23
ELSE (273) 23
WHILE (274) 24 25
DO (275) 25
BEGINLOOP (276) 24 25
ENDLOOP (277) 24 25
CONTINUE (278) 30
READ (279) 26
WRITE (280) 27
AND (281) 35
OR (282) 33
NOT (283) 37
TRUE (284) 39
FALSE (285) 40
RETURN (286) 31
SEMICOLON (287) 4 7 11 12
COLON (288) 5 6
COMMA (289) 10 28 64
L_PAREN (290) 41 60 61 62
R_PAREN (291) 41 60 61 62
L_SQUARE_BRACKET (292) 6 66
R_SQUARE_BRACKET (293) 6 66
ASSIGN (294) 21
END (295)
LT (296) 44
LTE (297) 46
GT (298) 45
GTE (299) 47
EQ (300) 42
NEQ (301) 43
MULT (302) 52
DIV (303) 53
MOD (304) 54
ADD (305) 49
SUB (306) 50 56


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1, on right: 0
Functions (54)
    on left: 2 3, on right: 1 2
Function (55)
    on left: 4, on right: 2
Declaration (56)
    on left: 5 6, on right: 7
Declarations (57)
    on left: 7 8, on right: 4 7
Identifiers (58)
    on left: 9 10, on right: 5 6 10
Statements (59)
    on left: 11 12, on right: 4 11 22 23 24 25
Statement (60)
    on left: 13 14 15 16 17 18 19 20, on right: 11 12
vars (61)
    on left: 21, on right: 13
ifs (62)
    on left: 22 23, on right: 14
whiles (63)
    on left: 24, on right: 15
dos (64)
    on left: 25, on right: 18
reads (65)
    on left: 26, on right: 16
writes (66)
    on left: 27, on right: 17
VLoop (67)
    on left: 28 29, on right: 26 27 28
continues (68)
    on left: 30, on right: 19
returns (69)
    on left: 31, on right: 20
Bool_Expression (70)
    on left: 32 33, on right: 22 23 24 25 33 41
Relation_and_Expression (71)
    on left: 34 35, on right: 32 33 35
Relation_Expression (72)
    on left: 36 37, on right: 34 35
rexp (73)
    on left: 38 39 40 41, on right: 36 37
comp (74)
    on left: 42 43 44 45 46 47, on right: 38
expression (75)
    on left: 48 49 50, on right: 21 31 38 49 50 60 63 64 66
Mult_Expression (76)
    on left: 51 52 53 54, on right: 48 49 50 52 53 54
Term (77)
    on left: 55 56 57, on right: 51 52 53 54
Positive_Term (78)
    on left: 58 59 60, on right: 55 56
Term_Identifier (79)
    on left: 61 62, on right: 57
Term_Expression (80)
    on left: 63 64, on right: 61 64
Var (81)
    on left: 65 66, on right: 21 26 27 28 58


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (Functions)

    Program    go to state 2
    Functions  go to state 3
    Function   go to state 4


State 1

    4 Function: FUNCTION . IDENTIFIER SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: Functions .

    $default  reduce using rule 1 (Program)


State 4

    2 Functions: Function . Functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (Functions)

    Functions  go to state 7
    Function   go to state 4


State 5

    4 Function: FUNCTION IDENTIFIER . SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    2 Functions: Function Functions .

    $default  reduce using rule 2 (Functions)


State 8

    4 Function: FUNCTION IDENTIFIER SEMICOLON . BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 Function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS . Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 8 (Declarations)

    Declaration   go to state 11
    Declarations  go to state 12
    Identifiers   go to state 13


State 10

    9 Identifiers: IDENTIFIER .
   10            | IDENTIFIER . COMMA Identifiers

    COMMA  shift, and go to state 14

    $default  reduce using rule 9 (Identifiers)


State 11

    7 Declarations: Declaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 15


State 12

    4 Function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS Declarations . END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    END_PARAMS  shift, and go to state 16


State 13

    5 Declaration: Identifiers . COLON INTEGER
    6            | Identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

   10 Identifiers: IDENTIFIER COMMA . Identifiers

    IDENTIFIER  shift, and go to state 10

    Identifiers  go to state 18


State 15

    7 Declarations: Declaration SEMICOLON . Declarations

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 8 (Declarations)

    Declaration   go to state 11
    Declarations  go to state 19
    Identifiers   go to state 13


State 16

    4 Function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS Declarations END_PARAMS . BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 17

    5 Declaration: Identifiers COLON . INTEGER
    6            | Identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

   10 Identifiers: IDENTIFIER COMMA Identifiers .

    $default  reduce using rule 10 (Identifiers)


State 19

    7 Declarations: Declaration SEMICOLON Declarations .

    $default  reduce using rule 7 (Declarations)


State 20

    4 Function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS . Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 8 (Declarations)

    Declaration   go to state 11
    Declarations  go to state 23
    Identifiers   go to state 13


State 21

    5 Declaration: Identifiers COLON INTEGER .

    $default  reduce using rule 5 (Declaration)


State 22

    6 Declaration: Identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 23

    4 Function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations . END_LOCALS BEGIN_BODY Statements END_BODY

    END_LOCALS  shift, and go to state 25


State 24

    6 Declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 26


State 25

    4 Function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS . BEGIN_BODY Statements END_BODY

    BEGIN_BODY  shift, and go to state 27


State 26

    6 Declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 28


State 27

    4 Function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY . Statements END_BODY

    IDENTIFIER  shift, and go to state 29
    IF          shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    CONTINUE    shift, and go to state 33
    READ        shift, and go to state 34
    WRITE       shift, and go to state 35
    RETURN      shift, and go to state 36

    Statements  go to state 37
    Statement   go to state 38
    vars        go to state 39
    ifs         go to state 40
    whiles      go to state 41
    dos         go to state 42
    reads       go to state 43
    writes      go to state 44
    continues   go to state 45
    returns     go to state 46
    Var         go to state 47


State 28

    6 Declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 48


State 29

   65 Var: IDENTIFIER .
   66    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 49

    $default  reduce using rule 65 (Var)


State 30

   22 ifs: IF . Bool_Expression THEN Statements ENDIF
   23    | IF . Bool_Expression THEN Statements ELSE Statements ENDIF

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    NOT         shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    L_PAREN     shift, and go to state 55
    SUB         shift, and go to state 56

    Bool_Expression          go to state 57
    Relation_and_Expression  go to state 58
    Relation_Expression      go to state 59
    rexp                     go to state 60
    expression               go to state 61
    Mult_Expression          go to state 62
    Term                     go to state 63
    Positive_Term            go to state 64
    Var                      go to state 65


State 31

   24 whiles: WHILE . Bool_Expression BEGINLOOP Statements ENDLOOP

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    NOT         shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    L_PAREN     shift, and go to state 55
    SUB         shift, and go to state 56

    Bool_Expression          go to state 66
    Relation_and_Expression  go to state 58
    Relation_Expression      go to state 59
    rexp                     go to state 60
    expression               go to state 61
    Mult_Expression          go to state 62
    Term                     go to state 63
    Positive_Term            go to state 64
    Var                      go to state 65


State 32

   25 dos: DO . BEGINLOOP Statements ENDLOOP WHILE Bool_Expression

    BEGINLOOP  shift, and go to state 67


State 33

   30 continues: CONTINUE .

    $default  reduce using rule 30 (continues)


State 34

   26 reads: READ . Var VLoop

    IDENTIFIER  shift, and go to state 29

    Var  go to state 68


State 35

   27 writes: WRITE . Var VLoop

    IDENTIFIER  shift, and go to state 29

    Var  go to state 69


State 36

   31 returns: RETURN . expression

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    L_PAREN     shift, and go to state 70
    SUB         shift, and go to state 56

    expression       go to state 71
    Mult_Expression  go to state 62
    Term             go to state 63
    Positive_Term    go to state 64
    Var              go to state 65


State 37

    4 Function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements . END_BODY

    END_BODY  shift, and go to state 72


State 38

   11 Statements: Statement . SEMICOLON Statements
   12           | Statement . SEMICOLON

    SEMICOLON  shift, and go to state 73


State 39

   13 Statement: vars .

    $default  reduce using rule 13 (Statement)


State 40

   14 Statement: ifs .

    $default  reduce using rule 14 (Statement)


State 41

   15 Statement: whiles .

    $default  reduce using rule 15 (Statement)


State 42

   18 Statement: dos .

    $default  reduce using rule 18 (Statement)


State 43

   16 Statement: reads .

    $default  reduce using rule 16 (Statement)


State 44

   17 Statement: writes .

    $default  reduce using rule 17 (Statement)


State 45

   19 Statement: continues .

    $default  reduce using rule 19 (Statement)


State 46

   20 Statement: returns .

    $default  reduce using rule 20 (Statement)


State 47

   21 vars: Var . ASSIGN expression

    ASSIGN  shift, and go to state 74


State 48

    6 Declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 75


State 49

   66 Var: IDENTIFIER L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    L_PAREN     shift, and go to state 70
    SUB         shift, and go to state 56

    expression       go to state 76
    Mult_Expression  go to state 62
    Term             go to state 63
    Positive_Term    go to state 64
    Var              go to state 65


State 50

   57 Term: IDENTIFIER . Term_Identifier
   65 Var: IDENTIFIER .
   66    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 77
    L_SQUARE_BRACKET  shift, and go to state 49

    $default  reduce using rule 65 (Var)

    Term_Identifier  go to state 78


State 51

   59 Positive_Term: NUMBER .

    $default  reduce using rule 59 (Positive_Term)


State 52

   37 Relation_Expression: NOT . rexp

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    L_PAREN     shift, and go to state 55
    SUB         shift, and go to state 56

    rexp             go to state 79
    expression       go to state 61
    Mult_Expression  go to state 62
    Term             go to state 63
    Positive_Term    go to state 64
    Var              go to state 65


State 53

   39 rexp: TRUE .

    $default  reduce using rule 39 (rexp)


State 54

   40 rexp: FALSE .

    $default  reduce using rule 40 (rexp)


State 55

   41 rexp: L_PAREN . Bool_Expression R_PAREN
   60 Positive_Term: L_PAREN . expression R_PAREN

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    NOT         shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    L_PAREN     shift, and go to state 55
    SUB         shift, and go to state 56

    Bool_Expression          go to state 80
    Relation_and_Expression  go to state 58
    Relation_Expression      go to state 59
    rexp                     go to state 60
    expression               go to state 81
    Mult_Expression          go to state 62
    Term                     go to state 63
    Positive_Term            go to state 64
    Var                      go to state 65


State 56

   56 Term: SUB . Positive_Term

    IDENTIFIER  shift, and go to state 29
    NUMBER      shift, and go to state 51
    L_PAREN     shift, and go to state 70

    Positive_Term  go to state 82
    Var            go to state 65


State 57

   22 ifs: IF Bool_Expression . THEN Statements ENDIF
   23    | IF Bool_Expression . THEN Statements ELSE Statements ENDIF
   33 Bool_Expression: Bool_Expression . OR Relation_and_Expression

    THEN  shift, and go to state 83
    OR    shift, and go to state 84


State 58

   32 Bool_Expression: Relation_and_Expression .
   35 Relation_and_Expression: Relation_and_Expression . AND Relation_Expression

    AND  shift, and go to state 85

    $default  reduce using rule 32 (Bool_Expression)


State 59

   34 Relation_and_Expression: Relation_Expression .

    $default  reduce using rule 34 (Relation_and_Expression)


State 60

   36 Relation_Expression: rexp .

    $default  reduce using rule 36 (Relation_Expression)


State 61

   38 rexp: expression . comp expression

    LT   shift, and go to state 86
    LTE  shift, and go to state 87
    GT   shift, and go to state 88
    GTE  shift, and go to state 89
    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91

    comp  go to state 92


State 62

   48 expression: Mult_Expression .
   49           | Mult_Expression . ADD expression
   50           | Mult_Expression . SUB expression

    ADD  shift, and go to state 93
    SUB  shift, and go to state 94

    $default  reduce using rule 48 (expression)


State 63

   51 Mult_Expression: Term .
   52                | Term . MULT Mult_Expression
   53                | Term . DIV Mult_Expression
   54                | Term . MOD Mult_Expression

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 51 (Mult_Expression)


State 64

   55 Term: Positive_Term .

    $default  reduce using rule 55 (Term)


State 65

   58 Positive_Term: Var .

    $default  reduce using rule 58 (Positive_Term)


State 66

   24 whiles: WHILE Bool_Expression . BEGINLOOP Statements ENDLOOP
   33 Bool_Expression: Bool_Expression . OR Relation_and_Expression

    BEGINLOOP  shift, and go to state 98
    OR         shift, and go to state 84


State 67

   25 dos: DO BEGINLOOP . Statements ENDLOOP WHILE Bool_Expression

    IDENTIFIER  shift, and go to state 29
    IF          shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    CONTINUE    shift, and go to state 33
    READ        shift, and go to state 34
    WRITE       shift, and go to state 35
    RETURN      shift, and go to state 36

    Statements  go to state 99
    Statement   go to state 38
    vars        go to state 39
    ifs         go to state 40
    whiles      go to state 41
    dos         go to state 42
    reads       go to state 43
    writes      go to state 44
    continues   go to state 45
    returns     go to state 46
    Var         go to state 47


State 68

   26 reads: READ Var . VLoop

    COMMA  shift, and go to state 100

    $default  reduce using rule 29 (VLoop)

    VLoop  go to state 101


State 69

   27 writes: WRITE Var . VLoop

    COMMA  shift, and go to state 100

    $default  reduce using rule 29 (VLoop)

    VLoop  go to state 102


State 70

   60 Positive_Term: L_PAREN . expression R_PAREN

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    L_PAREN     shift, and go to state 70
    SUB         shift, and go to state 56

    expression       go to state 103
    Mult_Expression  go to state 62
    Term             go to state 63
    Positive_Term    go to state 64
    Var              go to state 65


State 71

   31 returns: RETURN expression .

    $default  reduce using rule 31 (returns)


State 72

    4 Function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY .

    $default  reduce using rule 4 (Function)


State 73

   11 Statements: Statement SEMICOLON . Statements
   12           | Statement SEMICOLON .

    IDENTIFIER  shift, and go to state 29
    IF          shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    CONTINUE    shift, and go to state 33
    READ        shift, and go to state 34
    WRITE       shift, and go to state 35
    RETURN      shift, and go to state 36

    $default  reduce using rule 12 (Statements)

    Statements  go to state 104
    Statement   go to state 38
    vars        go to state 39
    ifs         go to state 40
    whiles      go to state 41
    dos         go to state 42
    reads       go to state 43
    writes      go to state 44
    continues   go to state 45
    returns     go to state 46
    Var         go to state 47


State 74

   21 vars: Var ASSIGN . expression

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    L_PAREN     shift, and go to state 70
    SUB         shift, and go to state 56

    expression       go to state 105
    Mult_Expression  go to state 62
    Term             go to state 63
    Positive_Term    go to state 64
    Var              go to state 65


State 75

    6 Declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 6 (Declaration)


State 76

   66 Var: IDENTIFIER L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 106


State 77

   61 Term_Identifier: L_PAREN . Term_Expression R_PAREN
   62                | L_PAREN . R_PAREN

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    L_PAREN     shift, and go to state 70
    R_PAREN     shift, and go to state 107
    SUB         shift, and go to state 56

    expression       go to state 108
    Mult_Expression  go to state 62
    Term             go to state 63
    Positive_Term    go to state 64
    Term_Expression  go to state 109
    Var              go to state 65


State 78

   57 Term: IDENTIFIER Term_Identifier .

    $default  reduce using rule 57 (Term)


State 79

   37 Relation_Expression: NOT rexp .

    $default  reduce using rule 37 (Relation_Expression)


State 80

   33 Bool_Expression: Bool_Expression . OR Relation_and_Expression
   41 rexp: L_PAREN Bool_Expression . R_PAREN

    OR       shift, and go to state 84
    R_PAREN  shift, and go to state 110


State 81

   38 rexp: expression . comp expression
   60 Positive_Term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 111
    LT       shift, and go to state 86
    LTE      shift, and go to state 87
    GT       shift, and go to state 88
    GTE      shift, and go to state 89
    EQ       shift, and go to state 90
    NEQ      shift, and go to state 91

    comp  go to state 92


State 82

   56 Term: SUB Positive_Term .

    $default  reduce using rule 56 (Term)


State 83

   22 ifs: IF Bool_Expression THEN . Statements ENDIF
   23    | IF Bool_Expression THEN . Statements ELSE Statements ENDIF

    IDENTIFIER  shift, and go to state 29
    IF          shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    CONTINUE    shift, and go to state 33
    READ        shift, and go to state 34
    WRITE       shift, and go to state 35
    RETURN      shift, and go to state 36

    Statements  go to state 112
    Statement   go to state 38
    vars        go to state 39
    ifs         go to state 40
    whiles      go to state 41
    dos         go to state 42
    reads       go to state 43
    writes      go to state 44
    continues   go to state 45
    returns     go to state 46
    Var         go to state 47


State 84

   33 Bool_Expression: Bool_Expression OR . Relation_and_Expression

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    NOT         shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    L_PAREN     shift, and go to state 55
    SUB         shift, and go to state 56

    Relation_and_Expression  go to state 113
    Relation_Expression      go to state 59
    rexp                     go to state 60
    expression               go to state 61
    Mult_Expression          go to state 62
    Term                     go to state 63
    Positive_Term            go to state 64
    Var                      go to state 65


State 85

   35 Relation_and_Expression: Relation_and_Expression AND . Relation_Expression

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    NOT         shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    L_PAREN     shift, and go to state 55
    SUB         shift, and go to state 56

    Relation_Expression  go to state 114
    rexp                 go to state 60
    expression           go to state 61
    Mult_Expression      go to state 62
    Term                 go to state 63
    Positive_Term        go to state 64
    Var                  go to state 65


State 86

   44 comp: LT .

    $default  reduce using rule 44 (comp)


State 87

   46 comp: LTE .

    $default  reduce using rule 46 (comp)


State 88

   45 comp: GT .

    $default  reduce using rule 45 (comp)


State 89

   47 comp: GTE .

    $default  reduce using rule 47 (comp)


State 90

   42 comp: EQ .

    $default  reduce using rule 42 (comp)


State 91

   43 comp: NEQ .

    $default  reduce using rule 43 (comp)


State 92

   38 rexp: expression comp . expression

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    L_PAREN     shift, and go to state 70
    SUB         shift, and go to state 56

    expression       go to state 115
    Mult_Expression  go to state 62
    Term             go to state 63
    Positive_Term    go to state 64
    Var              go to state 65


State 93

   49 expression: Mult_Expression ADD . expression

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    L_PAREN     shift, and go to state 70
    SUB         shift, and go to state 56

    expression       go to state 116
    Mult_Expression  go to state 62
    Term             go to state 63
    Positive_Term    go to state 64
    Var              go to state 65


State 94

   50 expression: Mult_Expression SUB . expression

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    L_PAREN     shift, and go to state 70
    SUB         shift, and go to state 56

    expression       go to state 117
    Mult_Expression  go to state 62
    Term             go to state 63
    Positive_Term    go to state 64
    Var              go to state 65


State 95

   52 Mult_Expression: Term MULT . Mult_Expression

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    L_PAREN     shift, and go to state 70
    SUB         shift, and go to state 56

    Mult_Expression  go to state 118
    Term             go to state 63
    Positive_Term    go to state 64
    Var              go to state 65


State 96

   53 Mult_Expression: Term DIV . Mult_Expression

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    L_PAREN     shift, and go to state 70
    SUB         shift, and go to state 56

    Mult_Expression  go to state 119
    Term             go to state 63
    Positive_Term    go to state 64
    Var              go to state 65


State 97

   54 Mult_Expression: Term MOD . Mult_Expression

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    L_PAREN     shift, and go to state 70
    SUB         shift, and go to state 56

    Mult_Expression  go to state 120
    Term             go to state 63
    Positive_Term    go to state 64
    Var              go to state 65


State 98

   24 whiles: WHILE Bool_Expression BEGINLOOP . Statements ENDLOOP

    IDENTIFIER  shift, and go to state 29
    IF          shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    CONTINUE    shift, and go to state 33
    READ        shift, and go to state 34
    WRITE       shift, and go to state 35
    RETURN      shift, and go to state 36

    Statements  go to state 121
    Statement   go to state 38
    vars        go to state 39
    ifs         go to state 40
    whiles      go to state 41
    dos         go to state 42
    reads       go to state 43
    writes      go to state 44
    continues   go to state 45
    returns     go to state 46
    Var         go to state 47


State 99

   25 dos: DO BEGINLOOP Statements . ENDLOOP WHILE Bool_Expression

    ENDLOOP  shift, and go to state 122


State 100

   28 VLoop: COMMA . Var VLoop

    IDENTIFIER  shift, and go to state 29

    Var  go to state 123


State 101

   26 reads: READ Var VLoop .

    $default  reduce using rule 26 (reads)


State 102

   27 writes: WRITE Var VLoop .

    $default  reduce using rule 27 (writes)


State 103

   60 Positive_Term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 111


State 104

   11 Statements: Statement SEMICOLON Statements .

    $default  reduce using rule 11 (Statements)


State 105

   21 vars: Var ASSIGN expression .

    $default  reduce using rule 21 (vars)


State 106

   66 Var: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 66 (Var)


State 107

   62 Term_Identifier: L_PAREN R_PAREN .

    $default  reduce using rule 62 (Term_Identifier)


State 108

   63 Term_Expression: expression .
   64                | expression . COMMA Term_Expression

    COMMA  shift, and go to state 124

    $default  reduce using rule 63 (Term_Expression)


State 109

   61 Term_Identifier: L_PAREN Term_Expression . R_PAREN

    R_PAREN  shift, and go to state 125


State 110

   41 rexp: L_PAREN Bool_Expression R_PAREN .

    $default  reduce using rule 41 (rexp)


State 111

   60 Positive_Term: L_PAREN expression R_PAREN .

    $default  reduce using rule 60 (Positive_Term)


State 112

   22 ifs: IF Bool_Expression THEN Statements . ENDIF
   23    | IF Bool_Expression THEN Statements . ELSE Statements ENDIF

    ENDIF  shift, and go to state 126
    ELSE   shift, and go to state 127


State 113

   33 Bool_Expression: Bool_Expression OR Relation_and_Expression .
   35 Relation_and_Expression: Relation_and_Expression . AND Relation_Expression

    AND  shift, and go to state 85

    $default  reduce using rule 33 (Bool_Expression)


State 114

   35 Relation_and_Expression: Relation_and_Expression AND Relation_Expression .

    $default  reduce using rule 35 (Relation_and_Expression)


State 115

   38 rexp: expression comp expression .

    $default  reduce using rule 38 (rexp)


State 116

   49 expression: Mult_Expression ADD expression .

    $default  reduce using rule 49 (expression)


State 117

   50 expression: Mult_Expression SUB expression .

    $default  reduce using rule 50 (expression)


State 118

   52 Mult_Expression: Term MULT Mult_Expression .

    $default  reduce using rule 52 (Mult_Expression)


State 119

   53 Mult_Expression: Term DIV Mult_Expression .

    $default  reduce using rule 53 (Mult_Expression)


State 120

   54 Mult_Expression: Term MOD Mult_Expression .

    $default  reduce using rule 54 (Mult_Expression)


State 121

   24 whiles: WHILE Bool_Expression BEGINLOOP Statements . ENDLOOP

    ENDLOOP  shift, and go to state 128


State 122

   25 dos: DO BEGINLOOP Statements ENDLOOP . WHILE Bool_Expression

    WHILE  shift, and go to state 129


State 123

   28 VLoop: COMMA Var . VLoop

    COMMA  shift, and go to state 100

    $default  reduce using rule 29 (VLoop)

    VLoop  go to state 130


State 124

   64 Term_Expression: expression COMMA . Term_Expression

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    L_PAREN     shift, and go to state 70
    SUB         shift, and go to state 56

    expression       go to state 108
    Mult_Expression  go to state 62
    Term             go to state 63
    Positive_Term    go to state 64
    Term_Expression  go to state 131
    Var              go to state 65


State 125

   61 Term_Identifier: L_PAREN Term_Expression R_PAREN .

    $default  reduce using rule 61 (Term_Identifier)


State 126

   22 ifs: IF Bool_Expression THEN Statements ENDIF .

    $default  reduce using rule 22 (ifs)


State 127

   23 ifs: IF Bool_Expression THEN Statements ELSE . Statements ENDIF

    IDENTIFIER  shift, and go to state 29
    IF          shift, and go to state 30
    WHILE       shift, and go to state 31
    DO          shift, and go to state 32
    CONTINUE    shift, and go to state 33
    READ        shift, and go to state 34
    WRITE       shift, and go to state 35
    RETURN      shift, and go to state 36

    Statements  go to state 132
    Statement   go to state 38
    vars        go to state 39
    ifs         go to state 40
    whiles      go to state 41
    dos         go to state 42
    reads       go to state 43
    writes      go to state 44
    continues   go to state 45
    returns     go to state 46
    Var         go to state 47


State 128

   24 whiles: WHILE Bool_Expression BEGINLOOP Statements ENDLOOP .

    $default  reduce using rule 24 (whiles)


State 129

   25 dos: DO BEGINLOOP Statements ENDLOOP WHILE . Bool_Expression

    IDENTIFIER  shift, and go to state 50
    NUMBER      shift, and go to state 51
    NOT         shift, and go to state 52
    TRUE        shift, and go to state 53
    FALSE       shift, and go to state 54
    L_PAREN     shift, and go to state 55
    SUB         shift, and go to state 56

    Bool_Expression          go to state 133
    Relation_and_Expression  go to state 58
    Relation_Expression      go to state 59
    rexp                     go to state 60
    expression               go to state 61
    Mult_Expression          go to state 62
    Term                     go to state 63
    Positive_Term            go to state 64
    Var                      go to state 65


State 130

   28 VLoop: COMMA Var VLoop .

    $default  reduce using rule 28 (VLoop)


State 131

   64 Term_Expression: expression COMMA Term_Expression .

    $default  reduce using rule 64 (Term_Expression)


State 132

   23 ifs: IF Bool_Expression THEN Statements ELSE Statements . ENDIF

    ENDIF  shift, and go to state 134


State 133

   25 dos: DO BEGINLOOP Statements ENDLOOP WHILE Bool_Expression .
   33 Bool_Expression: Bool_Expression . OR Relation_and_Expression

    OR  shift, and go to state 84

    $default  reduce using rule 25 (dos)


State 134

   23 ifs: IF Bool_Expression THEN Statements ELSE Statements ENDIF .

    $default  reduce using rule 23 (ifs)
